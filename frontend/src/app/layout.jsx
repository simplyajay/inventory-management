import "@/globals.css";
import Providers from "./providers";
import ProtectedLayout from "@/components/Layout/ProtectedLayout";
import Navbar from "@/components/Navbar/Navbar";
import { cookies } from "next/headers";
import { headers } from "next/headers";

export const metadata = {
  title: "Point of Sale System",
  description: "Generated by create next app",
};

export const getAuth = async () => {
  const cookieStore = cookies();
  const token = cookieStore.get(process.env.NEXT_PUBLIC_TOKEN);
  let auth = { user: null, authenticated: false };

  if (!token) {
    return auth;
  }
  try {
    const res = await fetch(`${process.env.NEXT_PUBLIC_URL}/api/user`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token.value}`,
      },
    });
    2;
    if (!res.ok) {
      return auth;
    }

    const userData = await res.json();
    auth.user = userData;
    auth.authenticated = true;
  } catch (error) {
    console.error("Error", error);
  }

  return auth;
};

const RootLayout = async ({ children }) => {
  const headersList = headers();
  const fullUrl = headersList.get("referer"); // This gives the URL of the page where the request originated
  const currentPath = fullUrl ? new URL(fullUrl).pathname : "/";
  const publicPaths = ["/", "/register"];

  const auth = await getAuth();

  return (
    <Providers>
      <html lang="en">
        <body className="antialiased w-screen h-screen m-0 p-0 flex flex-col">
          <Navbar />
          <main className="flex flex-1 ">
            {auth.authenticated && !publicPaths.includes(currentPath) ? (
              <ProtectedLayout user={auth.user}> {children}</ProtectedLayout>
            ) : (
              <>{children}</>
            )}
          </main>
          <footer></footer>
        </body>
      </html>
    </Providers>
  );
};

export default RootLayout;
